"""
Django settings for zeus project.

Generated by 'django-admin startproject' using Django 3.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import environ
from django.core.exceptions import ImproperlyConfigured


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

env = environ.Env(
    DEBUG=(bool, True),
    SECRET_KEY=(str, "secret-key"),
    ALLOWED_HOSTS=(list, ["127.0.0.1", "mac.local", "localhost",],),
)  # set default values and casting
root = environ.Path(BASE_DIR)


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env("DEBUG")

ALLOWED_HOSTS = env.list("ALLOWED_HOSTS")


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "django_celery_beat",
    "channels",
    "rest_framework.authtoken",
    "corsheaders",
    "anymail",
    "djpaddle",
    "django_extensions",
    "accounts",
    "billing",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "zeus.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "zeus.wsgi.application"


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

try:
    DATABASES = {"default": env.db()}
except ImproperlyConfigured as e:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": os.path.join(BASE_DIR, "db.sqlite3"),
        }
    }


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",},
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = "/static/"


MEDIA_ROOT = env("MEDIA_ROOT", default=os.path.join(BASE_DIR, "media"))

# change this!
FRONTEND_ROOT = "https://getmakerlog.com"
DEFAULT_FROM_EMAIL = env("DEFAULT_FROM_DOMAIN", default="hello@getmakerlog.com")
SIGNUPS_OPEN = True
RECAPTCHA_SECRET = env("RECAPTCHA_SECRET", default="")

REAL_AWS_ACCESS_KEY_ID = env("AWS_ACCESS_KEY_ID", default=None)
REAL_AWS_SECRET_ACCESS_KEY = env("AWS_SECRET_ACCESS_KEY", default=None)


SES_ACCESS_KEY_ID = env("SES_ACCESS_KEY_ID", default=None)
SES_SECRET_ACCESS_KEY = env("SES_SECRET_ACCESS_KEY", default=None)

if env("MAILGUN_API_KEY", default=None):
    ANYMAIL = {
        # (exact settings here depend on your ESP...)
        "MAILGUN_API_KEY": env("MAILGUN_API_KEY"),
        "MAILGUN_SENDER_DOMAIN": env(
            "MAILGUN_SENDER_DOMAIN", default="getmakerlog.com"
        ),  # your Mailgun domain, if needed
    }
    EMAIL_BACKEND = (
        "anymail.backends.mailgun.EmailBackend"  # or sendgrid.EmailBackend, or...
    )
elif env("SENDGRID_API_KEY", default=None):
    ANYMAIL = {"SENDGRID_API_KEY": env("SENDGRID_API_KEY")}
    EMAIL_BACKEND = "anymail.backends.sendgrid.EmailBackend"
elif env("MAILJET_API_KEY", default=None) and env("MAILJET_SECRET_KEY", default=None):
    ANYMAIL = {
        "MAILJET_API_KEY": env("MAILJET_API_KEY"),
        "MAILJET_SECRET_KEY": env("MAILJET_SECRET_KEY"),
    }
    EMAIL_BACKEND = "anymail.backends.mailjet.EmailBackend"
elif env("SPARKPOST_API_KEY", default=None):
    EMAIL_BACKEND = "anymail.backends.sparkpost.EmailBackend"
    ANYMAIL = {"SPARKPOST_API_KEY": env("SPARKPOST_API_KEY")}
elif SES_ACCESS_KEY_ID and SES_SECRET_ACCESS_KEY:
    os.environ["AWS_ACCESS_KEY_ID"] = SES_ACCESS_KEY_ID
    os.environ["AWS_SECRET_ACCESS_KEY"] = SES_SECRET_ACCESS_KEY
    os.environ["AWS_DEFAULT_REGION"] = "us-east-1"
    EMAIL_BACKEND = "anymail.backends.amazon_ses.EmailBackend"
else:
    EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"


if env.bool("DO_SPACES", default=False):
    AWS_ACCESS_KEY_ID = env("DO_ACCESS_KEY_ID", default=None)
    AWS_SECRET_ACCESS_KEY = env("DO_SECRET_ACCESS_KEY", default=None)
    AWS_STORAGE_BUCKET_NAME = env("DO_BUCKET_NAME", default=None)
    AWS_S3_REGION_NAME = env("DO_REGION", default="sfo2")
    AWS_S3_ENDPOINT_URL = env(
        "DO_ENDPOINT_URL",
        default="https://%s.digitaloceanspaces.com" % AWS_S3_REGION_NAME,
    )
    AWS_S3_CUSTOM_DOMAIN = env("AWS_S3_CUSTOM_DOMAIN", default=None)
    IMGIX_URL = env("IMGIX_URL", default=AWS_S3_CUSTOM_DOMAIN)
    AWS_DEFAULT_ACL = None

    AWS_S3_OBJECT_PARAMETERS = {"CacheControl": "max-age=86400"}

    AWS_LOCATION = env("DO_PREFIX", default="static")

    # s3 static settings
    STATIC_LOCATION = "static"
    STATICFILES_STORAGE = "zeus.aws.storage.StaticStorage"
    # s3 public media settings
    PUBLIC_MEDIA_LOCATION = "media"
    DEFAULT_FILE_STORAGE = "zeus.aws.storage.PublicMediaStorage"
    COLLECTFAST_STRATEGY = "collectfast.strategies.boto3.Boto3Strategy"
else:
    COLLECTFAST_STRATEGY = "collectfast.strategies.filesystem.FileSystemStrategy"
    DEFAULT_FILE_STORAGE = "django.core.files.storage.FileSystemStorage"


CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {"hosts": [env("REDIS_URL", default="redis://localhost:6379")]},
    }
}


AUTH_USER_MODEL = "accounts.User"

CORS_ORIGIN_ALLOW_ALL = True

DJPADDLE_VENDOR_ID = env("PADDLE_VENDOR_ID", default="")
DJPADDLE_API_KEY = env("PADDLE_API_KEY", default="")
DJPADDLE_PUBLIC_KEY = """
MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAsLRm4zzOwuNIrY8vlY07
to4VR8+oRB6wBfEAkbeMeLXWamx45YRA6Uib3H4DlXWgkpHPBdAcco00gkBIIVO7
VOwkf/L8+KBpgBPkOygM6zMW2fkZYoI/EzOmGfcE3E6p/AeWo/YwAlSw3+Fn3eU9
C/UiJBcUnAXJT9pRuT3i1Rr4C6zG+aT6n9dGx4V3I6yEGpepqI0V+KZzWaEopYEq
htijiZYctXk+w4Cqy7rDAr4816P7q/PpMNKFeKxQz7JaWT82YSN5gCrBVzGemKNp
94msAX2W+r0wMNOSLU7wrtQjlVRXw7VkfJ+3d2NKfpiDf35l458KVTY/o0Qxgyxe
/EAhwlpSCqHXMWhh/htv4TRFZto8ib+Yp40HvLxreQ9IFGvvpDWX8JLRxHIhjg53
qmUNfJWEMDxUbpCVLVYJeCuq4jlqBsJscdDAOr5qUJiMf2bDGMNScVOVnH9OUyQ8
Jt/JXl9uOh/g+vnUqMpiU907I8ivaFc76cS3CITunTVsM+AMhYM8tCFOv2+SsBf1
rz67C8vdtpVshKBGUdwYHd2Y7UFJWf+OHaT/IkFv1IQ5PW6G555oCgTcm10vRX4m
85Ycuz5oiCpUU41ZMm9KL/9RWs628ESCxNYQvHqJnRNymC+xeguCRGaT8uOZMWDT
Wd78+3nbTVpbmbVH2EUaeT8CAwEAAQ==
"""


REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework.authentication.SessionAuthentication",
        "accounts.authentication.token.TokenAuthenticationWithTimezones",
    ),
    "DEFAULT_FILTER_BACKENDS": ("django_filters.rest_framework.DjangoFilterBackend",),
    "DEFAULT_PERMISSION_CLASSES": ["rest_framework.permissions.IsAuthenticated",],
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.LimitOffsetPagination",
    "PAGE_SIZE": 20,
}


ASGI_APPLICATION = "zeus.routing.application"
